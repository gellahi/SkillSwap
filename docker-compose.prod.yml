version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Auth Service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_auth?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - EMAIL_FROM=${EMAIL_FROM}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PREFIX=skillswap_auth:
      - REDIS_CACHE_TTL=3600
      - JWT_REFRESH_EXPIRY_SECONDS=604800
    depends_on:
      - mongodb
      - redis
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Projects Service
  projects-service:
    build:
      context: ./services/projects
      dockerfile: Dockerfile
    container_name: projects-service
    restart: always
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_projects?authSource=admin
      - AUTH_SERVICE_URL=http://auth-service:3001
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3005
    depends_on:
      - mongodb
      - auth-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Bids Service
  bids-service:
    build:
      context: ./services/bids
      dockerfile: Dockerfile
    container_name: bids-service
    restart: always
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_bids?authSource=admin
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PROJECTS_SERVICE_URL=http://projects-service:3002
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3005
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    depends_on:
      - mongodb
      - auth-service
      - projects-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Messages Service
  messages-service:
    build:
      context: ./services/messages
      dockerfile: Dockerfile
    container_name: messages-service
    restart: always
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_messages?authSource=admin
      - AUTH_SERVICE_URL=http://auth-service:3001
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3005
      - MESSAGE_HASH_SECRET=${MESSAGE_HASH_SECRET}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    depends_on:
      - mongodb
      - auth-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Notifications Service
  notifications-service:
    build:
      context: ./services/notifications
      dockerfile: Dockerfile
    container_name: notifications-service
    restart: always
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - PORT=3005
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_notifications?authSource=admin
      - AUTH_SERVICE_URL=http://auth-service:3001
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    depends_on:
      - mongodb
      - auth-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Voice Search Service
  voice-search-service:
    build:
      context: ./services/voice-search
      dockerfile: Dockerfile
    container_name: voice-search-service
    restart: always
    ports:
      - "3006:3006"
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
      - PORT=3006
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/skillswap_voice_search?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=1
      - REDIS_PREFIX=skillswap_voice_search:
      - REDIS_CACHE_TTL=3600
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PROJECTS_SERVICE_URL=http://projects-service:3002
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - SPEECH_RECOGNITION_LANGUAGE=en-US
    depends_on:
      - mongodb
      - redis
      - auth-service
      - projects-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PROJECTS_SERVICE_URL=http://projects-service:3002
      - BIDS_SERVICE_URL=http://bids-service:3003
      - MESSAGES_SERVICE_URL=http://messages-service:3004
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3005
      - VOICE_SEARCH_SERVICE_URL=http://voice-search-service:3006
      - FRONTEND_URL=${FRONTEND_URL}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    depends_on:
      - auth-service
      - projects-service
      - bids-service
      - messages-service
      - notifications-service
      - voice-search-service
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-gateway
    networks:
      - skillswap-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  skillswap-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
